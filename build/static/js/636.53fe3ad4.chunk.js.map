{"version":3,"file":"static/js/636.53fe3ad4.chunk.js","mappings":"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","sources":["webpack://react-portfolio-starter-code-files/./src/subComponents/Tests/style.module.css?033f","components/ChernobylTests.jsx","subComponents/PowerButton.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"style_main__0aDfB\",\"endContainer\":\"style_endContainer__isBMH\",\"selected\":\"style_selected__XY0Iz\",\"container\":\"style_container__2mtz3\",\"barContainer\":\"style_barContainer__3aeu9\",\"progressBar\":\"style_progressBar__tPfzx\"};","import React, { useState, useEffect } from 'react';\r\nimport questions from '../subComponents/Tests/Tests.json';\r\nimport styles from '../subComponents/Tests/style.module.css';\r\nimport PowerButton from '../subComponents/PowerButton';\r\n\r\nfunction Tests() {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [answers, setAnswers] = useState(new Array(questions.questions.length).fill(null));\r\n    const [questionsData, setQuestionsData] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [quizFinished, setQuizFinished] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const shuffledQuestions = questions.questions.sort(() => Math.random() - 0.5);\r\n        setQuestionsData(shuffledQuestions);\r\n    }, []);\r\n\r\n    const handleAnswer = (selectedAnswer) => {\r\n        setSelectedOption(selectedAnswer);\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (selectedOption !== null) {\r\n            const updatedAnswers = [...answers];\r\n            updatedAnswers[currentQuestion] = selectedOption;\r\n            setAnswers(updatedAnswers);\r\n            setSelectedOption(null);\r\n            if (currentQuestion + 1 < questionsData.length) {\r\n                setCurrentQuestion(currentQuestion + 1);\r\n            } else {\r\n                finishQuiz();\r\n            }\r\n        }\r\n    };\r\n\r\n    const restart = () => {\r\n        setQuizFinished(false);\r\n        setCurrentQuestion(0);\r\n        setAnswers(new Array(questions.questions.length).fill(null));\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const finishQuiz = () => {\r\n        let currentScore = 0;\r\n        answers.forEach((answer, index) => {\r\n            const correctAnswer = questionsData[index].correct_answer;\r\n            if (answer === correctAnswer) {\r\n                currentScore++;\r\n            }\r\n        });\r\n        setScore(currentScore);\r\n        setQuizFinished(true);\r\n    };\r\n\r\n    const resetSelectedOption = () => {\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const progress = ((currentQuestion) / questionsData.length) * 100;\r\n    const filteredAnswers = answers.filter((answer) => answer !== null);\r\n    const correctAnswers = filteredAnswers.filter((answer, index) => answer === questionsData[index].correct_answer).length;\r\n    const percentage = (correctAnswers / questionsData.length) * 100;\r\n\r\n    return (\r\n        <>\r\n            <PowerButton />\r\n            {!quizFinished ? (\r\n                <div className={styles.main}>\r\n                    <div className={styles.container}>\r\n                        {questionsData.length > 0 && currentQuestion < questionsData.length && (\r\n                            <>\r\n                                <h2>Вопрос {currentQuestion + 1}</h2>\r\n                                <p>{questionsData[currentQuestion].question}</p>\r\n                                <ul>\r\n                                    {questionsData[currentQuestion].options.map((option, index) => (\r\n                                        <li key={index}>\r\n                                            <button\r\n                                                onClick={() => handleAnswer(option)}\r\n                                                className={selectedOption === option ? styles.selected : ''}\r\n                                            >\r\n                                                {option}\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                {currentQuestion < questionsData.length - 1 && (\r\n                                    <button onClick={() => { handleNextQuestion(); resetSelectedOption(); }} disabled={selectedOption === null}>\r\n                                        Следующий вопрос\r\n                                    </button>\r\n                                )}\r\n                                {currentQuestion === questionsData.length - 1 && (\r\n                                    <button onClick={handleNextQuestion} disabled={selectedOption === null}>\r\n                                        Перейти к результатам\r\n                                    </button>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className={styles.barContainer}>\r\n                        <div className={styles.progressBar} style={{ width: `${progress}%` }}></div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className={styles.endContainer}>\r\n                    <div className={styles.container}>\r\n                        <h2>Результаты</h2>\r\n                        <p>Результат: {correctAnswers}/{questionsData.length}</p>\r\n                        {correctAnswers >= 10 && (\r\n                            <img src={require('../subComponents/Tests/like.png')} alt=\"Вы молодец\" />\r\n                        )}\r\n                        {correctAnswers < 10 && correctAnswers >= 5 && (\r\n                            <img src={require('../subComponents/Tests/medium.png')} alt='Среднячок' />\r\n                        )}\r\n                        {correctAnswers < 5 && (\r\n                            <img src={require('../subComponents/Tests/dislike.png')} alt='Плохо' />\r\n                        )}\r\n                        <p>Вы знаете о чернобыле на {Math.floor(percentage)}%</p>\r\n                        <button onClick={restart}>Начать сначала</button>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tests;\r\n","import { PowerBtn } from \"../components/AllSvgs\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { mediaQueries } from \"../components/Themes\";\r\n\r\nconst Power = styled.button`\r\n  position: fixed;\r\n  top: 2rem;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n\r\n  background-color: #fcf6f4;\r\n  padding: 0.3rem;\r\n  border-radius: 50%;\r\n  border: 1px solid black;\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 3;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 255, 0, 0.4);\r\n    box-shadow: 0 0 8px 6px rgba(0, 255, 0, 0.2);\r\n  }\r\n\r\n  & > *:first-child {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  ${mediaQueries(40)`\r\n   width: 2rem;\r\n  height: 2rem;\r\n      svg{\r\n        width:20px;\r\n        height:20px;\r\n      }\r\n\r\n  `};\r\n`;\r\nconst PowerButton = () => {\r\n  return (\r\n    <Power>\r\n      <NavLink to=\"/\">\r\n        <PowerBtn width={30} height={30} fill=\"currentColor\" />\r\n      </NavLink>\r\n    </Power>\r\n  );\r\n};\r\n\r\nexport default PowerButton;\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["_useState","useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","Array","questions","length","fill","_useState4","answers","setAnswers","_useState5","_useState6","questionsData","setQuestionsData","_useState7","_useState8","selectedOption","setSelectedOption","_useState9","_useState10","quizFinished","setQuizFinished","_useState11","_useState12","setScore","useEffect","shuffledQuestions","sort","Math","random","handleNextQuestion","updatedAnswers","_toConsumableArray","finishQuiz","currentScore","forEach","answer","index","correct_answer","progress","correctAnswers","filter","percentage","_jsxs","_Fragment","children","_jsx","PowerButton","className","styles","src","require","alt","floor","onClick","question","options","map","option","disabled","style","width","concat","Power","styled","button","_templateObject","_taggedTemplateLiteral","mediaQueries","_templateObject2","NavLink","to","PowerBtn","height","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}