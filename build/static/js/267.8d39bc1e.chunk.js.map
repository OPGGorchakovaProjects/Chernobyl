{"version":3,"file":"static/js/267.8d39bc1e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_get","Reflect","get","bind","target","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","apply","this","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","push","_objectSpread2","i","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}